{"version":3,"sources":["rules/requireParameterType.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;kBAOe,qCAAqB,UAAC,OAAD,EAAa;AAC7C,QAAM,gBAAgB,CAAC,mBAAM,OAAN,EAAe,+CAAf,CAAD,IAAoE,2BAAW,OAAX,CAApE,CADuB;;AAG7C,QAAI,CAAC,aAAD,EAAgB;AAChB,eAAO,YAAM,EAAN,CADS;KAApB;;AAIA,WAAO,UAAC,YAAD,EAAkB;AACrB,+BAAU,aAAa,MAAb,EAAqB,UAAC,cAAD,EAAoB;AAC/C,gBAAM,gBAAgB,iCAAiB,cAAjB,EAAiC,OAAjC,CAAhB,CADyC;AAE/C,gBAAM,iBAAiB,mBAAM,cAAN,EAAsB,gBAAtB,KAA2C,mBAAM,cAAN,EAAsB,qBAAtB,CAA3C,CAFwB;;AAI/C,gBAAI,CAAC,cAAD,EAAiB;AACjB,wBAAQ,MAAR,CAAe,cAAf,EAA+B,cAAc,aAAd,GAA8B,8BAA9B,CAA/B,CADiB;aAArB;SAJ2B,CAA/B,CADqB;KAAlB,CAPsC;CAAb","file":"rules/requireParameterType.js","sourcesContent":["import _ from 'lodash';\nimport {\n    getParameterName,\n    isFlowFile,\n    iterateFunctionNodes\n} from './../utilities';\n\nexport default iterateFunctionNodes((context) => {\n    const checkThisFile = !_.get(context, 'settings.flowtype.onlyFilesWithFlowAnnotation') || isFlowFile(context);\n\n    if (!checkThisFile) {\n        return () => {};\n    }\n\n    return (functionNode) => {\n        _.forEach(functionNode.params, (identifierNode) => {\n            const parameterName = getParameterName(identifierNode, context);\n            const typeAnnotation = _.get(identifierNode, 'typeAnnotation') || _.get(identifierNode, 'left.typeAnnotation');\n\n            if (!typeAnnotation) {\n                context.report(identifierNode, 'Missing \"' + parameterName + '\" parameter type annotation.');\n            }\n        });\n    };\n});\n"],"sourceRoot":"/source/"}