{"version":3,"sources":["rules/spaceBeforeTypeColon.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;kBAMe,qCAAqB,UAAC,OAAD,EAAa;AAC7C,QAAM,SAAS,QAAQ,OAAR,CAAgB,CAAhB,MAAuB,QAAvB,CAD8B;;AAG7C,WAAO,UAAC,YAAD,EAAkB;AACrB,+BAAU,aAAa,MAAb,EAAqB,UAAC,cAAD,EAAoB;AAC/C,gBAAM,gBAAgB,iCAAiB,cAAjB,EAAiC,OAAjC,CAAhB,CADyC;AAE/C,gBAAM,iBAAiB,mBAAM,cAAN,EAAsB,gBAAtB,KAA2C,mBAAM,cAAN,EAAsB,qBAAtB,CAA3C,CAFwB;;AAI/C,gBAAI,cAAJ,EAAoB;AAChB,oBAAM,cAAc,eAAe,KAAf,GAAuB,eAAe,GAAf,CAD3B;;AAGhB,oBAAI,UAAU,cAAc,CAAd,EAAiB;AAC3B,4BAAQ,MAAR,CAAe,cAAf,EAA+B,mCAAmC,aAAnC,GAAmD,oCAAnD,CAA/B,CAD2B;iBAA/B,MAEO,IAAI,UAAU,gBAAgB,CAAhB,EAAmB;AACpC,4BAAQ,MAAR,CAAe,cAAf,EAA+B,mCAAmC,aAAnC,GAAmD,oCAAnD,CAA/B,CADoC;iBAAjC,MAEA,IAAI,CAAC,MAAD,IAAW,cAAc,CAAd,EAAiB;AACnC,4BAAQ,MAAR,CAAe,cAAf,EAA+B,oCAAoC,aAApC,GAAoD,oCAApD,CAA/B,CADmC;iBAAhC;aAPX;SAJ2B,CAA/B,CADqB;KAAlB,CAHsC;CAAb","file":"rules/spaceBeforeTypeColon.js","sourcesContent":["import _ from 'lodash';\nimport {\n    getParameterName,\n    iterateFunctionNodes\n} from './../utilities';\n\nexport default iterateFunctionNodes((context) => {\n    const always = context.options[0] === 'always';\n\n    return (functionNode) => {\n        _.forEach(functionNode.params, (identifierNode) => {\n            const parameterName = getParameterName(identifierNode, context);\n            const typeAnnotation = _.get(identifierNode, 'typeAnnotation') || _.get(identifierNode, 'left.typeAnnotation');\n\n            if (typeAnnotation) {\n                const spaceBefore = typeAnnotation.start - identifierNode.end;\n\n                if (always && spaceBefore > 1) {\n                    context.report(identifierNode, 'There must be 1 space before \"' + parameterName + '\" parameter type annotation colon.');\n                } else if (always && spaceBefore === 0) {\n                    context.report(identifierNode, 'There must be a space before \"' + parameterName + '\" parameter type annotation colon.');\n                } else if (!always && spaceBefore > 0) {\n                    context.report(identifierNode, 'There must be no space before \"' + parameterName + '\" parameter type annotation colon.');\n                }\n            }\n        });\n    };\n});\n"],"sourceRoot":"/source/"}